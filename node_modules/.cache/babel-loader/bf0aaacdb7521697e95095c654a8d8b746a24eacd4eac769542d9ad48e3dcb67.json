{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\fcerecognitionbrain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport ParticlesBg from 'particles-bg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: 'eb39ac409db34dfe952460fd26fd12b7'\n});\nconst returnClarifaiJSONRequest = imageUrl => {\n  const PAT = '9a79ac5267f54073853713833271f89d';\n  const USER_ID = 'tanmaymachkar';\n  const APP_ID = 'test';\n  const MODEL_ID = 'face-detection';\n  const IMAGE_URL = imageUrl;\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": IMAGE_URL\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n};\n\n///////////////////////////////////////////////////////////////////////////////////\n// YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n///////////////////////////////////////////////////////////////////////////////////\n\n// NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n// https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n// this will default to the latest version_id\n\nfetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + MODEL_VERSION_ID + \"/outputs\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.onInputChange = event => {\n      this.setState(event.target.value);\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict('face-detection', this.state.input).then(function (response) {\n        console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n      }, function (err) {});\n    };\n    this.state = {\n      input: '',\n      imageUrl: ''\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        type: \"circle\",\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        imageUrl: this.state.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Navigation","Clarifai","FaceRecognition","Logo","ImageLinkForm","Rank","ParticlesBg","jsxDEV","_jsxDEV","app","App","apiKey","returnClarifaiJSONRequest","imageUrl","PAT","USER_ID","APP_ID","MODEL_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","fetch","MODEL_VERSION_ID","then","response","text","result","console","log","catch","error","particleOptions","particles","number","value","density","enable","value_area","constructor","onInputChange","event","setState","target","onButtonSubmit","state","input","models","predict","outputs","data","regions","region_info","bounding_box","err","render","className","children","type","bg","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/ADMIN/fcerecognitionbrain/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport ParticlesBg from 'particles-bg';\nimport './App.css';\n\nconst app = new Clarifai.App({\n  apiKey: 'eb39ac409db34dfe952460fd26fd12b7'\n});\nconst returnClarifaiJSONRequest =(imageUrl) => {\n  const PAT = '9a79ac5267f54073853713833271f89d';\n  const USER_ID = 'tanmaymachkar';       \n  const APP_ID = 'test';\n  const MODEL_ID = 'face-detection';\n  const IMAGE_URL = imageUrl;\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n        \"user_id\": USER_ID,\n        \"app_id\": APP_ID\n    },\n    \"inputs\": [\n    {\n      \"data\": {\n              \"image\": {\n                       \"url\": IMAGE_URL\n              }\n      }\n    }\n    ]\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n}\n\n\n\n    ///////////////////////////////////////////////////////////////////////////////////\n    // YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n    ///////////////////////////////////////////////////////////////////////////////////\n\n    \n\n    \n    // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n    // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n    // this will default to the latest version_id\n\n    fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + MODEL_VERSION_ID + \"/outputs\", requestOptions)\n        .then(response => response.text())\n        .then(result => console.log(result))\n        .catch(error => console.log('error', error));\n\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nclass App extends Component {\n  constructor(){ \n    super();\n    this.state = {\n      input:'',\n      imageUrl:''\n    }\n  }\n\n  onInputChange = (event) => {\n    this.setState(event.target.value);\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models\n      .predict(\n        'face-detection',\n        this.state.input)\n    .then( \n      function(response){\n        console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n      },\n      function(err){\n\n      }\n    );\n  }\n\n  render() { \n    return (\n      <div className=\"App\">\n        <ParticlesBg type=\"circle\" bg={true} />\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLinkForm \n          onInputChange={this.onInputChange} \n          onButtonSubmit={this.onButtonSubmit} \n        />\n        <FaceRecognition imageUrl={this.state.imageUrl} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,QAAQ,MAAM,UAAU;AAC/B,OAAOC,eAAe,MAAM,8CAA8C;AAC1E,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,aAAa,MAAM,0CAA0C;AACpE,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAG,IAAIR,QAAQ,CAACS,GAAG,CAAC;EAC3BC,MAAM,EAAE;AACV,CAAC,CAAC;AACF,MAAMC,yBAAyB,GAAGC,QAAQ,IAAK;EAC7C,MAAMC,GAAG,GAAG,kCAAkC;EAC9C,MAAMC,OAAO,GAAG,eAAe;EAC/B,MAAMC,MAAM,GAAG,MAAM;EACrB,MAAMC,QAAQ,GAAG,gBAAgB;EACjC,MAAMC,SAAS,GAAGL,QAAQ;EAC1B,MAAMM,GAAG,GAAGC,IAAI,CAACC,SAAS,CAAC;IACzB,aAAa,EAAE;MACX,SAAS,EAAEN,OAAO;MAClB,QAAQ,EAAEC;IACd,CAAC;IACD,QAAQ,EAAE,CACV;MACE,MAAM,EAAE;QACA,OAAO,EAAE;UACA,KAAK,EAAEE;QAChB;MACR;IACF,CAAC;EAEH,CAAC,CAAC;EACF,MAAMI,cAAc,GAAG;IACrBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,QAAQ,EAAE,kBAAkB;MAC5B,eAAe,EAAE,MAAM,GAAGV;IAC5B,CAAC;IACDW,IAAI,EAAEN;EACR,CAAC;AACH,CAAC;;AAIG;AACA;AACA;;AAKA;AACA;AACA;;AAEAO,KAAK,CAAC,qCAAqC,GAAGT,QAAQ,GAAG,YAAY,GAAGU,gBAAgB,GAAG,UAAU,EAAEL,cAAc,CAAC,CACjHM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,MAAM,IAAIC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC,CAAC,CACnCG,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEE,KAAK,CAAC,CAAC;AAEpD,MAAMC,eAAe,GAAG;EACtBC,SAAS,EAAE;IACTC,MAAM,EAAE;MACNC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;QACPC,MAAM,EAAE,IAAI;QACZC,UAAU,EAAE;MACd;IACF;EACF;AACF,CAAC;AAED,MAAMhC,GAAG,SAASX,SAAS,CAAC;EAC1B4C,WAAWA,CAAA,EAAE;IACX,KAAK,CAAC,CAAC;IAAC,KAOVC,aAAa,GAAIC,KAAK,IAAK;MACzB,IAAI,CAACC,QAAQ,CAACD,KAAK,CAACE,MAAM,CAACR,KAAK,CAAC;IACnC,CAAC;IAAA,KAEDS,cAAc,GAAG,MAAM;MACrB,IAAI,CAACF,QAAQ,CAAC;QAACjC,QAAQ,EAAE,IAAI,CAACoC,KAAK,CAACC;MAAK,CAAC,CAAC;MAC3CzC,GAAG,CAAC0C,MAAM,CACPC,OAAO,CACN,gBAAgB,EAChB,IAAI,CAACH,KAAK,CAACC,KAAK,CAAC,CACpBtB,IAAI,CACH,UAASC,QAAQ,EAAC;QAChBG,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACwB,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,WAAW,CAACC,YAAY,CAAC;MAC3E,CAAC,EACD,UAASC,GAAG,EAAC,CAEb,CACF,CAAC;IACH,CAAC;IAxBC,IAAI,CAACT,KAAK,GAAG;MACXC,KAAK,EAAC,EAAE;MACRrC,QAAQ,EAAC;IACX,CAAC;EACH;EAsBA8C,MAAMA,CAAA,EAAG;IACP,oBACEnD,OAAA;MAAKoD,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClBrD,OAAA,CAACF,WAAW;QAACwD,IAAI,EAAC,QAAQ;QAACC,EAAE,EAAE;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvC3D,OAAA,CAACR,UAAU;QAAAgE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACd3D,OAAA,CAACL,IAAI;QAAA6D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACR3D,OAAA,CAACH,IAAI;QAAA2D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACR3D,OAAA,CAACJ,aAAa;QACZwC,aAAa,EAAE,IAAI,CAACA,aAAc;QAClCI,cAAc,EAAE,IAAI,CAACA;MAAe;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACF3D,OAAA,CAACN,eAAe;QAACW,QAAQ,EAAE,IAAI,CAACoC,KAAK,CAACpC;MAAS;QAAAmD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC;EAEV;AACF;AAEA,eAAezD,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}