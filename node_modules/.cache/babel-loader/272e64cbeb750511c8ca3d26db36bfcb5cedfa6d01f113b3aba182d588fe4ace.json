{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\fcerecognitionbrain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\n//import Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport ParticlesBg from 'particles-bg';\nimport './App.css';\n\n// const app = new Clarifai.App({\n//   apiKey: 'eb39ac409db34dfe952460fd26fd12b7'\n// });\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst returnClarifaiRequestOptions = imageUrl => {\n  const PAT = '9a79ac5267f54073853713833271f89d';\n  const USER_ID = 'tanmaymachkar';\n  const APP_ID = 'test';\n  const MODEL_ID = 'face-detection';\n  const IMAGE_URL = imageUrl;\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": IMAGE_URL\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n};\n\n// const particleOptions = {\n//   particles: {\n//     number: {\n//       value: 30,\n//       density: {\n//         enable: true,\n//         value_area: 800\n//       }\n//     }\n//   }\n// }\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.onInputChange = event => {\n      this.setState(event.target.value);\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      //app.models.predict('face-detection',this.state.input)\n      fetch(\"https://api.clarifai.com/v2/models/\" + 'face-detection' + \"/outputs\", returnClarifaiRequestOptions(this.state.input)).then(response => response.json()).then(function (response) {\n        console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n      }, function (err) {});\n    };\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        type: \"circle\",\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        imageUrl: this.state.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Navigation","FaceRecognition","Logo","ImageLinkForm","Rank","ParticlesBg","jsxDEV","_jsxDEV","returnClarifaiRequestOptions","imageUrl","PAT","USER_ID","APP_ID","MODEL_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","App","constructor","onInputChange","event","setState","target","value","onButtonSubmit","state","input","fetch","then","response","json","console","log","outputs","data","regions","region_info","bounding_box","err","box","render","className","children","type","bg","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/ADMIN/fcerecognitionbrain/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\n//import Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport ParticlesBg from 'particles-bg';\nimport './App.css';\n\n// const app = new Clarifai.App({\n//   apiKey: 'eb39ac409db34dfe952460fd26fd12b7'\n// });\nconst returnClarifaiRequestOptions =(imageUrl) => {\n  const PAT = '9a79ac5267f54073853713833271f89d';\n  const USER_ID = 'tanmaymachkar';       \n  const APP_ID = 'test';\n  const MODEL_ID = 'face-detection';\n  const IMAGE_URL = imageUrl;\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n        \"user_id\": USER_ID,\n        \"app_id\": APP_ID\n    },\n    \"inputs\": [\n    {\n      \"data\": {\n              \"image\": {\n                       \"url\": IMAGE_URL\n              }\n      }\n    }\n    ]\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n\n  return requestOptions\n}\n\n    \n\n// const particleOptions = {\n//   particles: {\n//     number: {\n//       value: 30,\n//       density: {\n//         enable: true,\n//         value_area: 800\n//       }\n//     }\n//   }\n// }\n\nclass App extends Component {\n  constructor(){ \n    super();\n    this.state = {\n      input:'',\n      imageUrl:'',\n      box:{},\n    }\n  }\n\n  onInputChange = (event) => {\n    this.setState(event.target.value);\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    //app.models.predict('face-detection',this.state.input)\n    fetch(\"https://api.clarifai.com/v2/models/\" + 'face-detection'  + \"/outputs\", returnClarifaiRequestOptions(this.state.input))\n    .then(response => response.json())\n    .then( \n      function(response){\n        console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n      },\n      function(err){\n\n      }\n    );\n  }\n\n  render() { \n    return (\n      <div className=\"App\">\n        <ParticlesBg type=\"circle\" bg={true} />\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLinkForm \n          onInputChange={this.onInputChange} \n          onButtonSubmit={this.onButtonSubmit} \n        />\n        <FaceRecognition imageUrl={this.state.imageUrl} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}